---
# Contact email for the admin user; this isn't really used for anything
# important at the moment
ciab_admin_email: "{{ ciab_admin_email }}"

# Name of the CHI-in-a-box site deployment. Used to identify Keystone endpoints
# and also to indicate which site a user is currenty logged in to in Horizon.
ciab_region_name: "{{ ciab_region_name }}"

# SSL can use LetsEncrypt certificates - if true, certificates will be
# automatically loaded from the default certbot directory of /etc/letsencrypt/live/${fqdn}
# If you are providing your own certificates, they are expected to be in
# /root at the following locations:
#   - Certificate: "${fqdn}.cer"
#   - Private key: "${fqdn}.key"
#   - Intermediate certificate: "${fqdn}-interm.cer"
ciab_ssl_letsencrypt: {{ ciab_ssl_letsencrypt }}

# The private interface is used for east-west traffic: OpenStack internal
# traffic and tenant network with Neutron being the main uses.
ciab_private_interface: "{{ ciab_private_interface }}"
ciab_private_ip: "{{ ciab_private_ip }}"
ciab_private_subnet: "{{ ciab_private_subnet }}"
ciab_private_gateway: "{{ ciab_private_gateway }}"

# The public interface is used for north-south traffic (public Internet)
ciab_public_interface: "{{ ciab_public_interface }}"
ciab_public_ip: "{{ ciab_public_ip }}"
ciab_public_subnet: "{{ ciab_public_subnet }}"
ciab_public_gateway: "{{ ciab_public_gateway }}"

# VLAN id for provisioning network
ironic_provisioning_vlan: 400

# VLAN range for all neutron networks - must include provisioning VLAN
neutron_network_vlan_range: "400:410"

# IPv4 CIDR for subnet that will be used for public IP allocation
# Defaults to value of `ciab_public_subnet`
#neutron_network_public_subnet:

# IPv4 range for public IP allocations - this can be different from the
# public subnet value to allow splitting a common subnet across multiple
# deploys (for example development vs production).
# This is an array with the first value being the first IP that can be
# allocated by Neutron, and the second value being the final IP.
# Defaults to first and last IP in the `neutron_network_public_subnet`.
#neutron_network_public_subnet_allocation_range: []

# DNS servers to use for default DNS resolution on all nodes and Neutron subnets.
# You must define 2 or some Puppet recipes will not evaluate.
# (Defaults to Google DNS)
neutron_dns_servers:
  - "8.8.8.8"
  - "8.8.4.4"

# Neutron generic switch configurations. The keys for this dictionary are
# the switch names, and the switch names are used when creating Ironic ports
# (using the local_link_connection 'switch_info' parameter.) They can be
# any value; they just have to match up with the Ironic ports.
#
# Example:
#
#   $neutron_ngs_switches = {
#     'genericswitch:switch1' => {
#     'device_type' => 'netmiko_dell_force10',
#     'ip'          => '10.0.0.1',
#     'username'    => 'username',
#     'password'    => 'itsasecret',
#     },
#   }
#
neutron_ngs_switches:
  - name: "genericswitch:switch1"
    device_type: netmiko_dell_force10
    ip:
    username:
    password:

# Neutron private interface details - this is the interface that will be used
# for all internal tenant network routing.
# Defaults to value of `ciab_private_interface`
#neutron_private_interface:

# Neutron public interface details - this is the interface that will be used for
# inbound traffic to tenant floating IPs.
# Defaults to value of `ciab_public_interface`
#neutron_public_interface:

###################
# Service accounts
###################

admin_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
admin_token: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
backup_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
blazar_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
blazar_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
ceilometer_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
ceilometer_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
cinder_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
cinder_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
db_hammers_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
db_readonly_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
glance_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
glance_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
gnocchi_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
gnocchi_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
heat_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
heat_domain_admin_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
heat_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
horizon_secret_key: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
instance_metrics_writer_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
ironic_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
ironic_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
keystone_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
metadata_proxy_shared_secret: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
mysql_root: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
neutron_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
neutron_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
nova_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
nova_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
nova_placement_dbpass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
nova_placement_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
rabbit_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
swift_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
